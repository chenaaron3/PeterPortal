{"version":3,"sources":["Assets/peterportal-banner-logo.svg","Components/SearchPage/CourseFilter.js","Components/SearchPage/ProfessorHitItem.js","Components/SearchPage/CourseHitItem.js","Components/SearchPage/SearchEngine.js","Components/SearchPage/SearchPage.js","Components/Timetable/CourseSection/index.js","Components/Timetable/index.js","Components/ReviewsModule/Review/index.js","Components/ReviewsModule/index.js","Components/PrereqTree/index.js","Components/CoursePage/CoursePage.js","Components/NavBar/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GEForm","id","label","filter","TermQuery","CourseLevelForm","CourseFilter","state","activeIndex","handleClick","e","titleProps","index","newIndex","setState","this","className","style","height","overflowY","Accordion","vertical","Menu","Item","Title","active","content","onClick","Content","field","operator","size","React","Component","ProfessorHitItem","props","href","result","_id","bemBlocks","item","dangerouslySetInnerHTML","__html","get","_source","name","title","department","ucinetid","CourseHitItem","id_department","id_number","units","description","prerequisite","ge_string","InitialLoaderComponent","SearchEngine","queryFieldValues","highlightFieldValues","searchkit","SearchkitManager","activeItem","display","flexDirection","pointing","secondary","icon","handleItemClick","class","Icon","searchOnChange","queryFields","searchThrottleTime","placeholder","itemComponent","hitsPerPage","highlightFields","customHighlight","pre_tags","post_tags","component","showNumbers","SearchkitComponent","SearchPage","Review","reviewData","userID","dateSubmitted","profID","forCredit","grade","value","rating","maxValue","text","reviewText","professorOptions","key","creditOptions","ratingOptions","gradeReceived","horizontalStyle","Tree","prerequisiteJSON","isValueNode","margin","role","basic","hasOwnProperty","Object","keys","map","child","PrereqTree","hasPrereqs","hasDependencies","dependencies","length","undefined","padding","dependency","JSON","parse","CoursePage","courseData","searchParams","query","terms","match","params","requestHeader","headers","Headers","body","stringify","method","fetch","then","data","json","res","hits","catch","console","log","getCourseData","Grid","Row","Column","id_school","Divider","restriction","marginBottom","ge_types","Card","Header","NavBar","overflowX","src","Logo","Popup","width","trigger","Label","as","color","image","Detail","flowing","hoverable","centered","columns","textAlign","position","Segment","App","exact","path","to","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc2bb5cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/peterportal-banner-logo.5c2d806f.svg\";","import React from \"react\";\nimport {Divider, Accordion, Menu, Form} from \"semantic-ui-react\";\nimport \"./CourseFilter.scss\";\nimport {RefinementListFilter, SelectedFilters, ResetFilters, HitsStats, TermQuery, CheckboxFilter} from \"searchkit\";\n\nconst customHitStats = props => (\n    <div>\n      <p>{props.hitsCount.value} courses found in {props.timeTaken}ms</p>\n  </div>\n)\n\n\nconst GEForm = (\n  <div>\n    <CheckboxFilter id=\"ge-Ia\" label=\"GE Ia: Lower Division Writing\" filter={TermQuery(\"ge_types.keyword\", \"GE Ia: Lower Division Writing\")} />\n    <CheckboxFilter id=\"ge-Ib\" label=\"GE Ib: Upper Division Writing\" filter={TermQuery(\"ge_types.keyword\", \"GE Ib: Upper Division Writing\")} />\n    <CheckboxFilter id=\"ge-II\" label=\"GE II: Science and Technology\" filter={TermQuery(\"ge_types.keyword\", \"GE II: Science and Technology\")} />\n    <CheckboxFilter id=\"ge-III\" label=\"GE III: Social & Behavioral Sciences\" filter={TermQuery(\"ge_types.keyword\", \"GE III: Social & Behavioral Sciences\")} />\n    <CheckboxFilter id=\"ge-IV\" label=\"GE IV: Arts and Humanities\" filter={TermQuery(\"ge_types.keyword\", \"GE IV: Arts and Humanities\")} />\n    <CheckboxFilter id=\"ge-Va\" label=\"GE Va: Quantitative Literacy\" filter={TermQuery(\"ge_types.keyword\", \"GE Va: Quantitative Literacy\")} />\n    <CheckboxFilter id=\"ge-Vb\" label=\"GE Vb: Formal Reasoning\" filter={TermQuery(\"ge_types.keyword\", \"GE Vb: Formal Reasoning\")} />\n    <CheckboxFilter id=\"ge-VI\" label=\"GE VI: Language Other Than English\" filter={TermQuery(\"ge_types.keyword\", \"GE VI: Language Other Than English\")} />\n    <CheckboxFilter id=\"ge-VII\" label=\"GE VII: Multicultural Studies\" filter={TermQuery(\"ge_types.keyword\", \"GE VII: Multicultural Studies\")} />\n    <CheckboxFilter id=\"ge-VIII\" label=\"GE VIII: International/Global Issues\" filter={TermQuery(\"ge_types.keyword\", \"GE VIII: International/Global Issues\")} />\n  </div>\n)\n\nconst CourseLevelForm = (\n  <div>\n    <CheckboxFilter id=\"course-level-lower\" label=\"Lower Division (1-99)\" filter={TermQuery(\"course_level.keyword\", \"Lower Division (1-99)\")} />\n    <CheckboxFilter id=\"course-level-upper\" label=\"Upper Division (100-199)\" filter={TermQuery(\"course_level.keyword\", \"Upper Division (100-199)\")} />\n    <CheckboxFilter id=\"course-level-grad\" label=\"Graduate/Professional Only (200+)\" filter={TermQuery(\"course_level.keyword\", \"Graduate/Professional Only (200+)\")} />\n  </div>\n)\n\n\nclass CourseFilter extends React.Component {\n  state = { activeIndex: 0 }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n    render() {\n      const { activeIndex } = this.state \n        return(\n         <div className=\"filter-list-container\">\n          {/* <HitsStats component={customHitStats} />\n          <ResetFilters/> */}\n          <h4>Search Filter</h4>\n          <SelectedFilters/>\n\n            <div style={{height: \"60vh\", overflowY: \"auto\"}}>\n            <Accordion vertical>\n              <Menu.Item>\n                <Accordion.Title\n                  active={activeIndex === 0}\n                  content='General Education'\n                  index={0}\n                  onClick={this.handleClick}\n                />\n                <Accordion.Content active={activeIndex === 0} content={GEForm} />\n              </Menu.Item>\n\n              <Menu.Item>\n                <Accordion.Title\n                  active={activeIndex === 1}\n                  content='Course Level'\n                  index={1}\n                  onClick={this.handleClick}\n                />\n                <Accordion.Content active={activeIndex === 1} content={CourseLevelForm} />\n              </Menu.Item>\n\n              <Menu.Item>\n                <Accordion.Title\n                  active={activeIndex === 2}\n                  content='School'\n                  index={2}\n                  onClick={this.handleClick}\n                />\n                <Accordion.Content active={activeIndex === 2} content={<RefinementListFilter id=\"school\" field=\"id_school.keyword\" operator=\"OR\"/>} />\n              </Menu.Item>\n\n              <Menu.Item>\n                <Accordion.Title\n                  active={activeIndex === 3}\n                  content='Department'\n                  index={3}\n                  onClick={this.handleClick}\n                />\n                <Accordion.Content active={activeIndex === 3} content={<RefinementListFilter id=\"depts\" field=\"id_department.keyword\" operator=\"OR\" size={200}/>} />\n              </Menu.Item>\n\n            </Accordion>\n            </div>\n            \n          </div>\n\n        )\n    }\n}\n\nexport default CourseFilter;","import React from \"react\";\r\nimport { get } from \"lodash\";\r\n\r\nconst ProfessorHitItem = (props) => (\r\n    <div>\r\n      <div>\r\n        <a href={\"/course/\" + props.result._id}>\r\n          <h3>\r\n            <span\r\n              className={props.bemBlocks.item(\"prof_name\")}\r\n              dangerouslySetInnerHTML={{\r\n                __html: get(\r\n                  props.result,\r\n                  \"highlight.name\",\r\n                  props.result._source.name\r\n                ),\r\n              }}\r\n            ></span>\r\n            <span\r\n              className={props.bemBlocks.item(\"title\")}\r\n              dangerouslySetInnerHTML={{\r\n              __html: \", \" + get(\r\n                  props.result,\r\n                  \"highlight.title\",\r\n                  props.result._source.title\r\n              ),\r\n              }}\r\n            ></span>\r\n          </h3>\r\n        </a>\r\n        <h4 className={\"course-department_unit\"}>\r\n          {props.result._source.department}&nbsp;･&nbsp;\r\n          {props.result._source.ucinetid + \"@uci.edu\"}\r\n        </h4>  \r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n  export default ProfessorHitItem;","import React from \"react\";\r\nimport { get } from \"lodash\";\r\n\r\nconst CourseHitItem = (props) => (\r\n    <div>\r\n      <div>\r\n        <a href={\"/course/\" + props.result._id}>\r\n          <h3>\r\n            <span\r\n              className={props.bemBlocks.item(\"id_department\")}\r\n              dangerouslySetInnerHTML={{\r\n                __html: get(\r\n                  props.result,\r\n                  \"highlight.id_department\",\r\n                  props.result._source.id_department\r\n                ),\r\n              }}\r\n            ></span>\r\n            &nbsp;\r\n            <span\r\n              className={props.bemBlocks.item(\"id_number\")}\r\n              dangerouslySetInnerHTML={{\r\n                __html: get(\r\n                  props.result,\r\n                  \"highlight.id_number\",\r\n                  props.result._source.id_number\r\n                ),\r\n              }}\r\n            ></span>\r\n            &nbsp;\r\n            <span\r\n              className={props.bemBlocks.item(\"name\")}\r\n              dangerouslySetInnerHTML={{\r\n                __html: get(\r\n                  props.result,\r\n                  \"highlight.name\",\r\n                  props.result._source.name\r\n                ),\r\n              }}\r\n            ></span>\r\n          </h3>\r\n        </a>\r\n        <h4 className={\"course-department_unit\"}>\r\n          {props.result._source.department}&nbsp;･&nbsp;\r\n          {props.result._source.units[0]} units\r\n        </h4>\r\n        <p\r\n          className={props.bemBlocks.item(\"description\")}\r\n          dangerouslySetInnerHTML={{\r\n            __html: get(\r\n              props.result,\r\n              \"highlight.description\",\r\n              props.result._source.description\r\n            ),\r\n          }}\r\n        ></p>\r\n        <p>{props.result._source.prerequisite}</p>\r\n  \r\n        <p className={\"course-department_unit\"}>\r\n          {props.result._source.ge_string}\r\n        </p>\r\n  \r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  export default CourseHitItem;","import React from \"react\";\r\nimport \"./SearchPage.scss\";\r\nimport CourseFilter from \"./CourseFilter.js\";\r\nimport ProfessorHitItem from \"./ProfessorHitItem.js\";\r\nimport CourseHitItem from \"./CourseHitItem.js\";\r\nimport { Icon, Menu } from \"semantic-ui-react\";\r\nimport { Pagination, SearchkitComponent, Hits, NoHits, InitialLoader, SearchBox, SearchkitManager, SearchkitProvider } from \"searchkit\";\r\n\r\nconst InitialLoaderComponent = (props) => <div>Fetching course data...</div>;\r\n\r\nclass SearchEngine extends SearchkitComponent {\r\n\r\n    queryFieldValues = {\r\n        \"courses\": [\r\n          \"id_department^10\",\r\n          \"id_number^10\",\r\n          \"description\",\r\n          \"dept_alias^10\",\r\n          \"name^3\",\r\n        ],\r\n        \"professors\": [\r\n          \"name^10\",\r\n          \"ucinetid^10\",\r\n          \"title^3\",\r\n          \"courseHistory\",\r\n          \"department^3\",\r\n        ]\r\n      }\r\n      highlightFieldValues = {\r\n        \"courses\": [\r\n          \"name\",\r\n          \"id_department\",\r\n          \"id_number\",\r\n          \"description\",\r\n        ],\r\n        \"professors\": [\r\n          \"name\",\r\n          \"title\",\r\n          \"department\",\r\n          \"courseHistory\"\r\n        ]\r\n      }\r\n      \r\n    render() {\r\n        let searchkit = new SearchkitManager(\"https://search-icssc-om3pkghp24gnjr4ib645vct64q.us-west-2.es.amazonaws.com/\" + this.props.activeItem);\r\n        return (\r\n            <SearchkitProvider searchkit={searchkit}>\r\n                <div className=\"App\" style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                    <div className=\"search-page\">\r\n                        <div className=\"sidebar-container\">\r\n                            <Menu pointing secondary vertical className=\"mode-switcher\">\r\n                                <Menu.Item\r\n                                    name=\"courses\"\r\n                                    icon=\"book\"\r\n                                    active={this.props.activeItem === \"courses\"}\r\n                                    onClick={this.props.handleItemClick}\r\n                                />\r\n                                <Menu.Item\r\n                                    name=\"professors\"\r\n                                    icon=\"graduation cap\"\r\n                                    active={this.props.activeItem === \"professors\"}\r\n                                    onClick={this.props.handleItemClick}\r\n                                />\r\n                            </Menu>\r\n                            \r\n                            {this.props.activeItem == \"courses\" && <CourseFilter/>}\r\n\r\n                            <div class=\"footer\">\r\n                                <a href=\"https://github.com/icssc-projects\">Github</a>\r\n                                <a href=\"/\">API</a>\r\n                                <a href=\"/\">About</a>\r\n                                <a href=\"/\">Team</a>\r\n                                <a href=\"/\">FAQ</a>\r\n                                <div class=\"copyright\">\r\n                                    <br/>\r\n                                    <p>Made with ♥ by <a href=\"https://studentcouncil.ics.uci.edu/\">ICSSC Project Committee</a>\r\n                                    <br/>Copyright © 2020, ICSSC.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"search-pane-container\">\r\n                            <div className=\"searchbox-container\">\r\n                                <Icon name='search' size='large' className=\"search-icon\"/>\r\n                                <SearchBox\r\n                                    searchOnChange={true}\r\n                                    queryFields={this.queryFieldValues[this.props.activeItem]}\r\n                                    searchThrottleTime={300}\r\n                                    placeholder={this.props.activeItem == \"courses\" ? \"Course number, title and description\" : \"Professor name, title, and department\"}\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div>\r\n                                <Hits\r\n                                    itemComponent={this.props.activeItem == \"courses\" ? CourseHitItem : ProfessorHitItem}\r\n                                    hitsPerPage={20}\r\n                                    highlightFields={this.highlightFieldValues[this.props.activeItem]}\r\n                                    customHighlight={{\r\n                                    pre_tags: [\"<highlight>\"],\r\n                                    post_tags: [\"</highlight>\"],\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <InitialLoader component={InitialLoaderComponent} />\r\n\r\n                            <Pagination showNumbers={true} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </SearchkitProvider>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SearchEngine;","import React from \"react\";\r\nimport \"./SearchPage.scss\";\r\nimport SearchEngine from \"./SearchEngine.js\";\r\n\r\nclass SearchPage extends React.Component {\r\n  state = { activeItem: \"courses\" };\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  render() {\r\n    const { activeItem } = this.state;\r\n    return (\r\n      <>\r\n        {activeItem == \"courses\" && <SearchEngine activeItem={activeItem} handleItemClick={this.handleItemClick}/>}\r\n        {activeItem == \"professors\" && <SearchEngine activeItem={activeItem} handleItemClick={this.handleItemClick}/>}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from 'react';\n\nclass CourseSection extends React.Component{\n    render() {\n        return(\n            <div style={{minWidth: (this.props.duration * 1.5) + \"px\"}} class=\"ui teal button course-section\"><p>PSLH 100<br/>LEC[A]</p></div>\n        );\n    }\n}\n\nexport default CourseSection;","import React from \"react\";\nimport { Table, Dropdown } from \"semantic-ui-react\";\nimport \"./timetable.scss\";\nimport { CourseSection } from \"./CourseSection\";\n\nconst friendOptions = [\n  {\n    key: '2020 Winter',\n    text: '2020 Winter',\n    value: '2020 Winter',\n  },\n  {\n    key: '2020 Spring',\n    text: '2020 Spring',\n    value: '2020 Spring',\n  },\n]\n\nclass Timeable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      WebSocData: null,\n      term: \"2020 Spring\"\n    };\n  }\n\n  // componentWillReceiveProps(){\n\n  //   console.log(this.props.courseSections)\n  //   var test = document.createElement('div')\n  //   test.innerHTML = '<button style=\"min-width: 150px\" class=\"ui teal button course-section\"><p>PSLH 100<br/>LEC[A]</p></button>'\n  //   document.getElementById(\"M-9AM\").append(test.firstChild);\n  // }\n\n  componentWillMount() {\n    this.getWebSoC();\n  }\n\n  getWebSoC() {\n    var requestHeader = {\n      method: \"GET\"\n    };\n\n    fetch(\n      \"http://localhost:3001/websoc/2020 Winter/\" +\n        this.props.id_department +\n        \"/\" +\n        this.props.id_number,\n      requestHeader\n    )\n      .then(data => {\n        return data.json();\n      })\n      .then(res => this.setState({ WebSocData: res }))\n      .catch(() => {\n        console.log(\"no course found\");\n      });\n  }\n\n  sectionTypeToColor(type) {\n    if (type === \"Act\") {\n      return \"red\";\n    } else if (type === \"Dis\") {\n      return \"orange\";\n    } else if (type === \"Lab\") {\n      return \"yellow\";\n    } else if (type === \"Qiz\") {\n      return \"olive\";\n    } else if (type === \"Sem\") {\n      return \"green\";\n    } else if (type === \"Tap\") {\n      return \"teal\";\n    } else if (type === \"Col\") {\n      return \"pink\";\n    } else if (type === \"Fld\") {\n      return \"brown\";\n    } else if (type === \"Lec\") {\n      return \"blue\";\n    } else if (type === \"Res\") {\n      return \"grey\";\n    } else if (type === \"Stu\") {\n      return \"purple\";\n    } else if (type === \"Tut\") {\n      return \"violet\";\n    }\n  }\n\n  onSectionHover(e) {\n    console.log(e)\n  }\n\n  drawSectionsOnTable() {\n    for (var i in this.state.WebSocData) {\n      for(var s in this.state.WebSocData[i]) {\n        var test = document.createElement(\"div\");\n        test.innerHTML =\n          '<button style=\"margin: 1px; height: auto; transform: translateX(' +\n          this.state.WebSocData[i][s].time.beginMin * 1.5 +\n          \"px); min-width:\" +\n          this.state.WebSocData[i][s].time.sessionDuration * 1.5 +\n          'px\" class=\"ui ' +\n          this.sectionTypeToColor(this.state.WebSocData[i][s].sectionType) + \" \" + this.state.WebSocData[i][s].sectionType.toUpperCase() +\n          \"[\" +\n          this.state.WebSocData[i][s].sectionNum + \"]\" +\n          ' button course-section\"><p style=\"font-size: 10px; padding: 4px 0px 0px 4px\">' +\n          this.state.WebSocData[i][s].bldg +\n          \"<br/>\" +\n          this.state.WebSocData[i][s].sectionType.toUpperCase() +\n          \"[\" +\n          this.state.WebSocData[i][s].sectionNum +\n          ']</p><div class=\"ui progress\"><div class=\"bar\" style=\"width:'+ (this.state.WebSocData[i][s].numCurrentlyEnrolled / this.state.WebSocData[i][s].maxCapacity)*100 + '%\"><div class=\"progress\"></div></div></div></button>';\n        document\n          .getElementById(i + \"-\" + this.state.WebSocData[i][s].time.beginHour)\n          .append(test.firstChild);\n          // console.log(this.state.WebSocData[i][s]);\n      }\n    }\n  }\n\n  render() {\n    if (this.state.WebSocData != null) {\n      this.drawSectionsOnTable();\n    }\n\n    return (\n      <div className={\"timetable-container\"}>\n        <Table celled className={\"unstackable\"}>\n          <Table.Header>\n            <Table.Row className={\"time-header\"}>\n              <Table.HeaderCell></Table.HeaderCell>\n              <Table.HeaderCell>\n                <span>8AM</span>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <span>9AM</span>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <span>10AM</span>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <span>11AM</span>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <span>12PM</span>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <span>1PM</span>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <span>2PM</span>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <span>3PM</span>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <span>4PM</span>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <span>5PM</span>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <span>6PM</span>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <span>7PM</span>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <span>8PM</span>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body className={\"time-row\"}>\n            <Table.Row>\n              <Table.Cell active>MON</Table.Cell>\n              <Table.Cell id={\"M-8\"}></Table.Cell>\n              <Table.Cell id={\"M-9\"}></Table.Cell>\n              <Table.Cell id={\"M-10\"}></Table.Cell>\n              <Table.Cell id={\"M-11\"}></Table.Cell>\n              <Table.Cell id={\"M-12\"}></Table.Cell>\n              <Table.Cell id={\"M-13\"}></Table.Cell>\n              <Table.Cell id={\"M-14\"}></Table.Cell>\n              <Table.Cell id={\"M-15\"}></Table.Cell>\n              <Table.Cell id={\"M-16\"}></Table.Cell>\n              <Table.Cell id={\"M-17\"}></Table.Cell>\n              <Table.Cell id={\"M-18\"}></Table.Cell>\n              <Table.Cell id={\"M-19\"}></Table.Cell>\n              <Table.Cell id={\"M-20\"}></Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell active>TUE</Table.Cell>\n              <Table.Cell id={\"Tu-8\"}></Table.Cell>\n              <Table.Cell id={\"Tu-9\"}></Table.Cell>\n              <Table.Cell id={\"Tu-10\"}></Table.Cell>\n              <Table.Cell id={\"Tu-11\"}></Table.Cell>\n              <Table.Cell id={\"Tu-12\"}></Table.Cell>\n              <Table.Cell id={\"Tu-13\"}></Table.Cell>\n              <Table.Cell id={\"Tu-14\"}></Table.Cell>\n              <Table.Cell id={\"Tu-15\"}></Table.Cell>\n              <Table.Cell id={\"Tu-16\"}></Table.Cell>\n              <Table.Cell id={\"Tu-17\"}></Table.Cell>\n              <Table.Cell id={\"Tu-18\"}></Table.Cell>\n              <Table.Cell id={\"Tu-19\"}></Table.Cell>\n              <Table.Cell id={\"Tu-20\"}></Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell active>WED</Table.Cell>\n              <Table.Cell id={\"W-8\"}></Table.Cell>\n              <Table.Cell id={\"W-9\"}></Table.Cell>\n              <Table.Cell id={\"W-10\"}></Table.Cell>\n              <Table.Cell id={\"W-11\"}></Table.Cell>\n              <Table.Cell id={\"W-12\"}></Table.Cell>\n              <Table.Cell id={\"W-13\"}></Table.Cell>\n              <Table.Cell id={\"W-14\"}></Table.Cell>\n              <Table.Cell id={\"W-15\"}></Table.Cell>\n              <Table.Cell id={\"W-16\"}></Table.Cell>\n              <Table.Cell id={\"W-17\"}></Table.Cell>\n              <Table.Cell id={\"W-18\"}></Table.Cell>\n              <Table.Cell id={\"W-19\"}></Table.Cell>\n              <Table.Cell id={\"W-20\"}></Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell active>THU</Table.Cell>\n              <Table.Cell id={\"Th-8\"}></Table.Cell>\n              <Table.Cell id={\"Th-9\"}></Table.Cell>\n              <Table.Cell id={\"Th-10\"}></Table.Cell>\n              <Table.Cell id={\"Th-11\"}></Table.Cell>\n              <Table.Cell id={\"Th-12\"}></Table.Cell>\n              <Table.Cell id={\"Th-13\"}></Table.Cell>\n              <Table.Cell id={\"Th-14\"}></Table.Cell>\n              <Table.Cell id={\"Th-15\"}></Table.Cell>\n              <Table.Cell id={\"Th-16\"}></Table.Cell>\n              <Table.Cell id={\"Th-17\"}></Table.Cell>\n              <Table.Cell id={\"Th-18\"}></Table.Cell>\n              <Table.Cell id={\"Th-19\"}></Table.Cell>\n              <Table.Cell id={\"Th-20\"}></Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell active>FRI</Table.Cell>\n              <Table.Cell id={\"F-8\"}></Table.Cell>\n              <Table.Cell id={\"F-9\"}></Table.Cell>\n              <Table.Cell id={\"F-10\"}></Table.Cell>\n              <Table.Cell id={\"F-11\"}></Table.Cell>\n              <Table.Cell id={\"F-12\"}></Table.Cell>\n              <Table.Cell id={\"F-13\"}></Table.Cell>\n              <Table.Cell id={\"F-14\"}></Table.Cell>\n              <Table.Cell id={\"F-15\"}></Table.Cell>\n              <Table.Cell id={\"F-16\"}></Table.Cell>\n              <Table.Cell id={\"F-17\"}></Table.Cell>\n              <Table.Cell id={\"F-18\"}></Table.Cell>\n              <Table.Cell id={\"F-19\"}></Table.Cell>\n              <Table.Cell id={\"F-20\"}></Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </div>\n    );\n  }\n}\nexport default Timeable;\n","import React from \"react\";\n// import avatar from \"../../../Assets/default-avatar.png\";\nimport \"./review.scss\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nclass Review extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className={\"review_container\"}>\n        <div className={\"avatar_container\"}>\n          {/* avater here! */}\n          {/* <img src={avatar}></img> */}\n        </div>\n\n        <div className={\"content_container\"}>\n          {/* review context */}\n          <div className={\"review_header_container\"}>\n               {/* review info header */}\n            <div className={\"review_header_info_container\"}>\n              <h2 id={\"reviewer_name\"}>{this.props.reviewData.userID}</h2>\n              <h4 id={\"timestamp\"}>{this.props.reviewData.dateSubmitted}</h4>\n\n              <div className={\"reviewer_meta_container\"}>\n                <div>\n                  <h5>\n                    <b>Taken with:</b> {this.props.reviewData.profID}\n                  </h5>\n                </div>\n\n                <div>\n                  <h5>\n                    <b>For Credit:</b> {this.props.reviewData.forCredit ? \"Yes\" : \"No\"}\n                  </h5>\n                </div>\n\n                <div>\n                  <h5>\n                    <b>Grade:</b> {this.props.reviewData.grade}\n                  </h5>\n                </div>\n              </div>\n            </div>\n\n           \n            <div className={\"review_rating_container\"}>\n              <CircularProgressbar value={this.props.reviewData.rating} maxValue={5} text={this.props.reviewData.rating} />\n            </div>\n          </div>\n\n          <div className={\"review_body_container\"}><p>{this.props.reviewData.reviewText}</p></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","import React from \"react\";\nimport Review from \"./Review\";\nimport { Form, TextArea, Checkbox, Dropdown, Button } from \"semantic-ui-react\";\n\nconst professorOptions = [\n  { key: \"pattis\", value: \"pattis\", text: \"Richard Pattis\" },\n  { key: \"thornton\", value: \"thornton\", text: \"Alexander Thornton\" }\n];\n\nconst creditOptions = [\n  { key: \"credit\", value: \"True\", text: \"Taken for credit\" },\n  { key: \"p/np\", value: \"False\", text: \"Taken as P/NP\" }\n];\n\nconst ratingOptions = [\n  { key: \"1\", value: \"1\", text: \"1\" },\n  { key: \"2\", value: \"2\", text: \"2\" },\n  { key: \"3\", value: \"3\", text: \"3\" },\n  { key: \"4\", value: \"4\", text: \"4\" },\n  { key: \"5\", value: \"5\", text: \"5\" }\n];\n\nconst gradeReceived = [\n  { key: \"A\", value: \"A\", text: \"A\" },\n  { key: \"B\", value: \"B\", text: \"B\" },\n  { key: \"C\", value: \"C\", text: \"C\" },\n  { key: \"D\", value: \"D\", text: \"D\" },\n  { key: \"F\", value: \"F\", text: \"F\" },\n  { key: \"P\", value: \"P\", text: \"P\" },\n  { key: \"NP\", value: \"NP\", text: \"NP\" },\n  { key: \"W\", value: \"W\", text: \"W\" },\n  { key: \"I\", value: \"I\", text: \"I\" },\n  { key: \"S\", value: \"S\", text: \"S\" },\n  { key: \"U\", value: \"U\", text: \"U\" },\n  { key: \"IP\", value: \"IP\", text: \"IP\" },\n];\n\nclass ReviewsModule extends React.Component {\n  constructor(props) {\n    super(props);\n    let date = new Date;\n    this.state = {\n      text: \"\",\n      rating: 0,\n      userID: \"raman\",\n      courseID: \"\",//this.props.courseID,\n      profID: \"\",\n      date: date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate(),\n      grade: \"\",\n      forCredit: \"\",\n      reviews: [],\n    };\n    \n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({courseID: this.props.courseID});\n    this.getReviews();\n  }\n\n  addReview = () => {\n\n    var queryParams = {\n      text: this.state.text,\n      rating: this.state.rating,\n      userID: this.state.userID,\n      courseID: this.state.courseID,//this.props.courseID,\n      profID: this.state.profID,\n      date: this.state.date,\n      grade: this.state.grade,\n      forCredit: this.state.forCredit,\n    }\n    var requestHeader= {\n      'Content-Type': 'application/json',\n    };\n    \n    fetch(\"/reviews/addReview\", {\n      method: \"POST\",\n      headers: requestHeader,\n      body: JSON.stringify(queryParams),\n    }).then(data => {return data.json()})\n    .then(res => {\n      console.log(\"it worked\");\n      this.getReviews();\n    }).catch(() => {\n      console.log(\"no course found\")\n    });\n  }\n  \n  getReviews = () => {\n    fetch(\"/reviews/course?courseID=\"+ encodeURIComponent(this.props.courseID), {\n      method: \"GET\"\n    }).then(data => {return data.json()})\n    .then(res => {\n      this.setState({reviews: res});\n      console.log(\"it worked\", res);\n    }).catch(() => {\n      console.log(\"no course found\")\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ marginTop: \"26px\", marginBottom: \"200px\" }}>\n        <h1>Review and Discussion</h1>\n        <div>\n          \n          {this.state.reviews && this.state.reviews.map(item => (\n            <>\n              <Review reviewData={item} />\n            </>\n          ))}\n           \n          <div style={{ marginTop: \"100px\" }}>\n            {/* <div className={\"avatar_container\"}>\n                    <img src={avatar}></img>\n                  </div> */}\n\n            <Form>\n              <h1 id={\"reviewer_name\"}>\n                Peter Anteater\n                <Checkbox\n                  style={{ marginLeft: \"18px\" }}\n                  label=\"Post review as Anonymous\"\n                />\n              </h1>\n\n              <div style={{ display: \"flex\", marginBottom: \"16px\"}}>\n              <Dropdown\n                clearable\n                fluid\n                search\n                selection\n                options={professorOptions}\n                placeholder=\"Select Professor\"\n                onChange={(event,  data) => {this.setState({profID: data.value})}}                \n              />\n\n              <Dropdown\n                placeholder=\"Grade Option\"\n                fluid\n                selection\n                options={creditOptions}\n                onChange={(event, data) => {this.setState({forCredit: data.value})}}\n              />\n\n              <Dropdown\n                placeholder=\"Grade Received\"\n                fluid\n                selection\n                options={gradeReceived}\n                onChange={(event, data) => {this.setState({grade: data.value})}}\n              />\n              <Dropdown\n                placeholder=\"Rating\"\n                fluid\n                selection\n                options={ratingOptions}\n                onChange={(event, data)=> {this.setState({rating: data.value})}}\n              />\n              </div>\n              \n              <TextArea \n              placeholder=\"Write your review here\"\n              \n              onChange={(event, data) => {this.setState({text: data.value})}}\n               />\n\n              <Button onClick={this.addReview}>Submit</Button>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReviewsModule;\n","import React from \"react\";\r\nimport \"./prereq-tree.scss\";\r\n\r\nconst horizontalStyle = { display: \"inline-flex\", flexDirection: \"row\" };\r\n\r\nclass Tree extends React.Component {\r\n  render() {\r\n    let prerequisite = this.props.prerequisiteJSON;\r\n    let isValueNode = typeof prerequisite === \"string\";\r\n    return (\r\n      <div style={{ margin: \"auto\" }}>\r\n        {/* If is just a value node */}\r\n        {isValueNode && (\r\n          <span>\r\n            <div className=\"prereq-node-branch\">\r\n              <a href=\"\" role=\"button\" className={\"node ui basic button\"} basic>\r\n                {prerequisite}\r\n              </a>\r\n            </div>\r\n          </span>\r\n        )}\r\n        {/* If is a subtree */}\r\n        {!isValueNode && (\r\n          <div style={horizontalStyle}>\r\n            <span style={{ margin: \"auto 40px auto 20px\" }}>\r\n              <div className=\"prereq-branch\">\r\n                <p>{prerequisite.hasOwnProperty(\"OR\") ? \"one of\" : \"all of\"}</p>\r\n              </div>\r\n            </span>\r\n\r\n            <ul className=\"prereq-list\">\r\n              <div className=\"prereq-list-branch\">\r\n                {prerequisite[Object.keys(prerequisite)[0]].map(\r\n                  (child, index) => (\r\n                    <li key={index}>\r\n                      <Tree prerequisiteJSON={child} />\r\n                    </li>\r\n                  )\r\n                )}\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PrereqTree extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let hasPrereqs = this.props.prerequisiteJSON != \"\";\r\n    let hasDependencies = this.props.dependencies.length != 0;\r\n\r\n    if (this.props.id == undefined) return \"\";\r\n    else if (!hasPrereqs && !hasDependencies)\r\n      return (\r\n        <div>\r\n          <span>No Dependencies or Prerequisites!</span>\r\n        </div>\r\n      );\r\n    return (\r\n      <div\r\n        style={{ display: \"inline-flex\", flexDirection: \"row\", margin: \"auto\" }}\r\n      >\r\n        {/* Display dependencies */}\r\n        {hasDependencies && (\r\n          <>\r\n            <div style={{ display: \"flex\" }}>\r\n              <ul style={{ padding: \"0\", margin: \"auto\" }}>\r\n              <div className=\"dependency-list-branch\">\r\n                {this.props.dependencies.map((dependency, index) => (\r\n                  <div>\r\n                    <span>\r\n                      <div className=\"dependency-node\">\r\n                        <a\r\n                          href=\"\"\r\n                          role=\"button\"\r\n                          className={\"node ui button\"}\r\n                          basic\r\n                        >\r\n                          {dependency}\r\n                        </a>\r\n                      </div>\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n                </div>\r\n              </ul>\r\n            </div>\r\n            <div style={horizontalStyle}>\r\n              <span style={{ margin: \"auto 20px auto 40px\" }}>\r\n                <div className=\"dependency-branch\">\r\n                  <p>needs</p>\r\n                </div>\r\n              </span>\r\n            </div>\r\n          </>\r\n        )}\r\n        {!hasDependencies}\r\n        {/* Display the class id */}\r\n        <div className=\"course-node_container\" style={{ margin: \"auto\" }}>\r\n          <a\r\n            href=\"\"\r\n            role=\"button\"\r\n            className={\"node ui button course-node\"}\r\n            basic\r\n          >\r\n            {this.props.id}\r\n          </a>\r\n        </div>\r\n        {/* Spawns the root of the prerequisite tree */}\r\n        {hasPrereqs && (\r\n          <div style={{ display: \"flex\" }}>\r\n            <Tree prerequisiteJSON={JSON.parse(this.props.prerequisiteJSON)} />\r\n          </div>\r\n        )}\r\n        {!hasPrereqs}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrereqTree;\r\n","import React from \"react\";\nimport Timetable from \"../Timetable\";\nimport ReviewsModule from \"../ReviewsModule\";\nimport PrereqTree from \"../PrereqTree\";\nimport { Grid, Icon, Divider, Card, Radio, Button } from \"semantic-ui-react\";\nimport \"./CoursePage.scss\";\n\nclass CoursePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      courseData: null\n    };\n  }\n\n  getCourseData() {\n    var searchParams = {\n      query: {\n        terms: {\n          _id: [this.props.match.params.id]\n        }\n      }\n    };\n\n    var requestHeader = {\n      headers: new Headers({\n        \"content-type\": \"application/json; charset=UTF-8\",\n        \"content-length\": 140\n      }),\n      body: JSON.stringify(searchParams),\n      method: \"POST\"\n    };\n\n    // console.log(process.env.REACT_APP_ELASTIC_ENDPOINT_URL_COURSES)\n\n    fetch(\n      \"https://search-icssc-om3pkghp24gnjr4ib645vct64q.us-west-2.es.amazonaws.com/courses/_search\",\n      requestHeader\n    )\n      .then(data => {\n        return data.json();\n      })\n      .then(res => {\n        this.setState({ courseData: res.hits.hits[0]._source });\n      })\n      .catch(e => console.log(e));\n  }\n\n  componentDidMount() {\n    this.getCourseData();\n  }\n\n  render() {\n    if (this.state.courseData != null) {\n      return (\n        <div\n          className=\"App\"\n          style={{ display: \"flex\", flexDirection: \"column\" }}\n        >\n          <div className=\"course_page\">\n            <Grid.Row className=\"course_content-container\">\n              <Grid.Column className=\"course_info-container\">\n                <h1 id=\"course_id\">{this.state.courseData.id}</h1>\n                <h2 id=\"course_name\">{this.state.courseData.name}</h2>\n                <p id=\"course_dept-school-unit\">\n                  {this.state.courseData.department}\n                  <br />\n                  {this.state.courseData.id_school}&nbsp;･&nbsp;\n                  {this.state.courseData.units[0]} units\n                </p>\n                <Divider />\n                <Grid.Row id=\"course_addl-info\">\n                  <Grid.Column id=\"course_desc-container\">\n                    <p>{this.state.courseData.description}</p>\n                    <p>\n                      <b>Restriction: </b>\n                      {this.state.courseData.restriction}\n                    </p>\n                  </Grid.Column>\n                  <Grid.Column id=\"course_ge-info\">\n                      <p style={{marginBottom: \"6px\"}}><b>GE Criteria</b></p>\n\n                    {this.state.courseData.ge_types.map((value, index) => {\n                      return (\n                        <p className=\"list-item\" key={index}>\n                          {value}\n                        </p>\n                      );\n                    })}\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row className=\"course_content-container course_prereq-tree-container\">\n              <Card>\n                <Card.Content>\n                  <Card.Header>Prerequisite Tree</Card.Header>\n                </Card.Content>\n                <Card.Content>\n                  {this.state.courseData.id && (\n                    <PrereqTree\n                      id={this.state.courseData.id}\n                      dependencies={this.state.courseData.dependencies}\n                      prerequisiteJSON={this.state.courseData.prerequisiteJSON}\n                    />\n                  )}\n                  <br />\n                  <p>\n                    <b>Prerequisite: </b>\n                    {this.state.courseData.prerequisite}\n                  </p>\n                </Card.Content>\n              </Card>\n            </Grid.Row>\n\n            {/* <Grid.Row className=\"course_content-container course_prereq-tree-container\">\n              <Card>\n                <Card.Content>\n                  <Card.Header>\n                    Schedule of Classes<span style={{fontSize: \"14px\", fontWeight: \"200\", float: \"right\", display: \"flex\", marginTop: \"6px\"}}><Icon name=\"calendar minus outline\"/><Radio toggle /><Icon name=\"list\"/></span>\n                  </Card.Header>\n                </Card.Content>\n                <Card.Content>\n                  <Timetable\n                    id_department={this.state.courseData.id_department}\n                    id_number={this.state.courseData.id_number}\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Row> */}\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h1>Loading..</h1>\n        </div>\n      );\n    }\n  }\n}\n\nexport default CoursePage;\n","import React from \"react\";\nimport { Menu, Segment, Label, Popup, Grid, Header, Button, Icon } from \"semantic-ui-react\";\nimport Logo from \"../../Assets/peterportal-banner-logo.svg\";\nimport \"./NavBar.scss\";\n\nclass NavBar extends React.Component {\n  state = { activeItem: \"search\" };\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  render() {\n    const { activeItem } = this.state;\n    \n    return (\n      <div className={\"top-bar\"} style={{ overflowX: \"hidden\" }}>\n        <Menu secondary className=\"nav-menu\">\n          <Menu.Item>\n            <div class=\"peterportal-logo-container\">\n              <a href=\"/\"><img id=\"peterportal-logo\" src={Logo}></img></a>\n            </div>\n          </Menu.Item>\n          <Menu.Item>\n            <div>\n\n            <Popup style={{padding: \"36px\", width: \"400px\"}} trigger={<Label as='a' color='yellow' image>Alpha<Label.Detail>v0.1</Label.Detail></Label>} flowing hoverable >\n              <Grid centered columns={1}>\n                <Grid.Column textAlign='left'>\n                  <Header as='h4'>Alpha Disclaimer</Header>\n                  <p>\n                  Please note that this is an alpha version of PeterPortal, which is still undergoing development. \n                  Some content on this web application may not be accurate. Users are encouraged to double check details.\n                  <br/>\n                  <br/> \n                  Should you encounter any bugs, glitches, lack of functionality or other problems on the application, \n                  please let us know immediately so we can rectify these accordingly. Your help in this regard is greatly appreciated.\n                  </p>\n                  <a class=\"ui button\" href=\"https://github.com/icssc-projects/PeterPortal/issues/new\"><Icon name='github'/>Report an issue</a>\n                </Grid.Column>\n          \n              </Grid>\n            </Popup>\n\n            </div>\n          </Menu.Item>\n\n          <Menu.Item position=\"right\">\n            <Segment>\n              <Menu pointing secondary className=\"nav-menu\">\n                <Menu.Item\n                  name=\"search\"\n                  icon=\"search\"\n                  active={activeItem === \"search\"}\n                  onClick={this.handleItemClick}\n                />\n\n                <Menu.Item\n                  name=\"settings\"\n                  icon=\"settings\"\n                  active={activeItem === \"settings\"}\n                  onClick={this.handleItemClick}\n                />\n\n                <Menu.Item position=\"right\">\n                  <div className={\"school-term_container\"}>\n                    <p className={\"school-term\"} style={{marginBottom: \"-1px\"}}>Week 2, Spring 2020</p>\n                  </div>\n                </Menu.Item>\n\n\n              </Menu>\n            </Segment>\n          </Menu.Item>\n        </Menu>\n      </div>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport \"./branding.scss\";\r\nimport SearchPage from \"./Components/SearchPage/SearchPage\";\r\nimport CoursePage from \"./Components/CoursePage/CoursePage\";\r\nimport NavBar from \"./Components/NavBar/NavBar\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n\r\nimport { SearchkitManager, SearchkitProvider } from \"searchkit\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      // <SearchkitProvider {/*searchkit= {\r\n      //   new SearchkitManager(\"https://search-icssc-om3pkghp24gnjr4ib645vct64q.us-west-2.es.amazonaws.com/professors\")\r\n      // */}>\r\n        <Router>\r\n          <NavBar/>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Redirect to=\"/search\" />\r\n            </Route>\r\n            <Route path=\"/search\" component={SearchPage} />\r\n            <Route path=\"/course/:id\" component={CoursePage} />\r\n          </Switch>\r\n        </Router>\r\n\r\n      // </SearchkitProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}